{
  "version": 3,
  "sources": ["../../../../src/functions/verifyCertificate.ts", "../../../../src/utils/dynamodbClient.ts"],
  "sourcesContent": ["import { APIGatewayProxyHandler } from \"aws-lambda\";\nimport { document } from \"../utils/dynamodbClient\";\n\n\nexport const handler: APIGatewayProxyHandler = async (event) => {\n  const { id } = event.pathParameters;\n\n  const queryCertificate = await document.query({\n    TableName: \"users_certificate\",\n    KeyConditionExpression: \"id = :id\",\n    ExpressionAttributeValues: {\n      \":id\": id\n    }\n  }).promise();\n\n  const userCertificate = queryCertificate.Items[0];\n\n  if(userCertificate) {\n    return {\n      statusCode: 200,\n      body: JSON.stringify({\n        message: \"Valid certificate\",\n        name: userCertificate.name,\n        url: `https://certificate-serverless-iago.s3.amazonaws.com/${id}.pdf`\n      })\n    }\n  }\n\n  return {\n    statusCode: 400,\n    body: JSON.stringify({\n      message: \"Invalid certificate\",\n    })\n  }\n}", "import { DynamoDB } from \"aws-sdk\";\n\nconst options = {\n\tregion: \"localhost\",\n\tendpoint: \"http://localhost:8000\",\n  accessKeyId: 'xxxxxx',\n  secretAccessKey: 'xxxxxx',\n};\n\nconst isOffline = () => {\n\treturn process.env.IS_OFFLINE; //Vari\u00E1vel de ambiente setada automaticamente pelo plugin serverless-offline\n}\n\nexport const document = isOffline()\n\t? new DynamoDB.DocumentClient(options)\n\t: new DynamoDB.DocumentClient()"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;;;ACAA,qBAAyB;AAEzB,IAAM,UAAU;AAAA,EACf,QAAQ;AAAA,EACR,UAAU;AAAA,EACT,aAAa;AAAA,EACb,iBAAiB;AAAA;AAGnB,IAAM,YAAY,MAAM;AACvB,SAAO,QAAQ,IAAI;AAAA;AAGb,IAAM,WAAW,cACrB,IAAI,wBAAS,eAAe,WAC5B,IAAI,wBAAS;;;ADXT,IAAM,UAAkC,OAAO,UAAU;AAC9D,QAAM,EAAE,OAAO,MAAM;AAErB,QAAM,mBAAmB,MAAM,SAAS,MAAM;AAAA,IAC5C,WAAW;AAAA,IACX,wBAAwB;AAAA,IACxB,2BAA2B;AAAA,MACzB,OAAO;AAAA;AAAA,KAER;AAEH,QAAM,kBAAkB,iBAAiB,MAAM;AAE/C,MAAG,iBAAiB;AAClB,WAAO;AAAA,MACL,YAAY;AAAA,MACZ,MAAM,KAAK,UAAU;AAAA,QACnB,SAAS;AAAA,QACT,MAAM,gBAAgB;AAAA,QACtB,KAAK,wDAAwD;AAAA;AAAA;AAAA;AAKnE,SAAO;AAAA,IACL,YAAY;AAAA,IACZ,MAAM,KAAK,UAAU;AAAA,MACnB,SAAS;AAAA;AAAA;AAAA;",
  "names": []
}
